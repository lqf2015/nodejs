一、Node.js事件循环
  ##Node.js 是单进程单线程应用程序,但是通过事件回调支持并发,所以性能非常高
  ##Node.js 的每个API都是异步的,并作为一个独立线程运行,使用异步函数调用,并处理并发。
  ##Node.js 基本上所有的时间机制都是用设置及模式中观察者模式实现,
  ##Node.js 单项成类似进入一个while(true)的时间循环,直到没有事件观察者退出,每个异步事件都生成一个时间观察者,
  如果有事件发生就调用该回调函数

二、事件驱动程序
  ##Node.js使用事件驱动模型,当web server接收到请求,就把他关闭然后进行处理,然后去服务下一个web请求。
  当这个请求完成时,他被放回处理队列,当到达队列开头,这个结果被返回给用户。
  这个模型非常高效可扩展性非常强,因为webserver一直接受请求而不等待任何读写操作。
  (这也被称为非阻塞式IO或者事件驱动IO)在实践驱动模型中,会生成一个主循环来监听事件,当检测到事件时触发回调。

三、Node应用程序如何工作
   ##在node应用程序中,执行异步操作的函数将回调函数作为最后一个参数,回调函数接受错误对象作为第一个参数,


EventEmitter 类